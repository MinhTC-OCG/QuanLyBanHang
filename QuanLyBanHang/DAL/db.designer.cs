#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLBH")]
	public partial class dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTrinhDo12(TrinhDo12 instance);
    partial void UpdateTrinhDo12(TrinhDo12 instance);
    partial void DeleteTrinhDo12(TrinhDo12 instance);
    partial void InsertLoaiHang12(LoaiHang12 instance);
    partial void UpdateLoaiHang12(LoaiHang12 instance);
    partial void DeleteLoaiHang12(LoaiHang12 instance);
    #endregion
		
		public dbDataContext() : 
				base(global::DAL.Properties.Settings.Default.QLBHConnectionStringMinh, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TrinhDo12> TrinhDo12s
		{
			get
			{
				return this.GetTable<TrinhDo12>();
			}
		}
		
		public System.Data.Linq.Table<LoaiHang12> LoaiHang12s
		{
			get
			{
				return this.GetTable<LoaiHang12>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TrinhDo12")]
	public partial class TrinhDo12 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTD;
		
		private string _TenTD;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTDChanging(string value);
    partial void OnMaTDChanged();
    partial void OnTenTDChanging(string value);
    partial void OnTenTDChanged();
    #endregion
		
		public TrinhDo12()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTD", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTD
		{
			get
			{
				return this._MaTD;
			}
			set
			{
				if ((this._MaTD != value))
				{
					this.OnMaTDChanging(value);
					this.SendPropertyChanging();
					this._MaTD = value;
					this.SendPropertyChanged("MaTD");
					this.OnMaTDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTD", DbType="NVarChar(50)")]
		public string TenTD
		{
			get
			{
				return this._TenTD;
			}
			set
			{
				if ((this._TenTD != value))
				{
					this.OnTenTDChanging(value);
					this.SendPropertyChanging();
					this._TenTD = value;
					this.SendPropertyChanged("TenTD");
					this.OnTenTDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiHang12")]
	public partial class LoaiHang12 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaL;
		
		private string _TenL;
		
		private string _GhiChu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLChanging(string value);
    partial void OnMaLChanged();
    partial void OnTenLChanging(string value);
    partial void OnTenLChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public LoaiHang12()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaL", DbType="NChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaL
		{
			get
			{
				return this._MaL;
			}
			set
			{
				if ((this._MaL != value))
				{
					this.OnMaLChanging(value);
					this.SendPropertyChanging();
					this._MaL = value;
					this.SendPropertyChanged("MaL");
					this.OnMaLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenL", DbType="NVarChar(50)")]
		public string TenL
		{
			get
			{
				return this._TenL;
			}
			set
			{
				if ((this._TenL != value))
				{
					this.OnTenLChanging(value);
					this.SendPropertyChanging();
					this._TenL = value;
					this.SendPropertyChanged("TenL");
					this.OnTenLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(50)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
